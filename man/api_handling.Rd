% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api-ogcapi.R, R/api-stac.R, R/api.R
\name{create_ogcapi}
\alias{create_ogcapi}
\alias{api_landing_page.ogcapi}
\alias{api_conformance.ogcapi}
\alias{api_collections.ogcapi}
\alias{api_collection.ogcapi}
\alias{api_items.ogcapi}
\alias{api_item.ogcapi}
\alias{create_stac}
\alias{api_landing_page.stac}
\alias{api_conformance.stac}
\alias{api_collections.stac}
\alias{api_collection.stac}
\alias{api_items.stac}
\alias{api_item.stac}
\alias{api_search.stac}
\alias{api_handling}
\alias{api_landing_page}
\alias{api_conformance}
\alias{api_collections}
\alias{api_collection}
\alias{api_items}
\alias{api_item}
\alias{api_search}
\title{Handle API requests}
\usage{
create_ogcapi(title, description, conforms_to = NULL, ...)

\method{api_landing_page}{ogcapi}(api, req, res, ...)

\method{api_conformance}{ogcapi}(api, req, res, ...)

\method{api_collections}{ogcapi}(api, req, res, ...)

\method{api_collection}{ogcapi}(api, req, res, collection_id, ...)

\method{api_items}{ogcapi}(api, req, res, collection_id, limit, bbox, datetime, page, ...)

\method{api_item}{ogcapi}(api, req, res, collection_id, item_id, ...)

create_stac(id, title, description, conforms_to = NULL, ...)

\method{api_landing_page}{stac}(api, req, res, ...)

\method{api_conformance}{stac}(api, req, res, ...)

\method{api_collections}{stac}(api, req, res, ...)

\method{api_collection}{stac}(api, req, res, collection_id, ...)

\method{api_items}{stac}(api, req, res, collection_id, limit, bbox, datetime, page, ...)

\method{api_item}{stac}(api, req, res, collection_id, item_id, ...)

\method{api_search}{stac}(
  api,
  req,
  res,
  limit,
  bbox,
  datetime,
  intersects,
  ids,
  collections,
  page,
  ...
)

api_landing_page(api, req, res, ...)

api_conformance(api, req, res, ...)

api_collections(api, req, res, ...)

api_collection(api, req, res, collection_id, ...)

api_items(api, req, res, collection_id, limit, bbox, datetime, page, ...)

api_item(api, req, res, collection_id, item_id, ...)

api_search(
  api,
  req,
  res,
  limit,
  bbox,
  datetime,
  intersects,
  ids,
  collections,
  page,
  ...
)
}
\arguments{
\item{title}{A character string specifying the title of the API.}

\item{description}{A character string describing the API.}

\item{conforms_to}{A character vector specifying the conformance
standards adhered to by the API. This parameter can be NULL or
contain additional conformance standards to add to the defaults.}

\item{...}{Additional arguments to be passed to the method-specific
functions.}

\item{api}{An object representing the API. This object is typically
created using either the \code{create_stac} or \code{create_ogcapi}}

\item{req}{The request object from the \code{plumber} package, containing
information about the HTTP request made to the API endpoint.}

\item{res}{The response object from the \code{plumber} package, used to
construct and send the HTTP response back to the client making
the request.}

\item{collection_id}{The identifier of the collection. This parameter
specifies which collection the request is targeting.}

\item{limit}{The maximum number of items to return. If not specified,
the default value is used.}

\item{bbox}{The bounding box for spatial filtering, specified as a
numeric vector of four coordinates
(\code{long_min}, \code{lat_min}, \code{long_max}, \code{lat_max}). Use \code{parse_dbl()} to
convert comma-separated string to numeric vector.}

\item{datetime}{The temporal filter for items. It must be specified
as a \code{list(start = start_date, end = end_date, exact = exact_date)}
object. Use \code{parse_datetime()} function to convert STAC datetime
string to this object.}

\item{page}{The page number of the results when paginating.}

\item{item_id}{The identifier of the item within the specified collection.
This parameter specifies which item the request is targeting.}

\item{id}{A character string specifying the id of the API.}

\item{intersects}{The spatial filter for items, specified as a GeoJSON
geometry object representing the area of interest. Use \code{parse_geojson()}
function to convert strings of GeoJSON geometries into an equivalent
\code{list()} object.}

\item{ids}{A list of item identifiers to filter the search results.
Use \code{parse_str()} to convert a comma-separated string to a
character vector}

\item{collections}{A list of collection identifiers to filter the
search results. Use \code{parse_str()} to convert a comma-separated
string to a character vector.}
}
\value{
For API creation functions, returns a api object. For API
handling functions, returns the document to return as response.
}
\description{
These are low-level functions responsible for handling requests of the
API endpoint. It interfaces HTTP requests from \code{plumber} and uses the
\code{api}, the \code{req}, and the \code{res} objects to prepare a response to the
request by dispatching to specific API implementations.
}
\details{
Users should parse and validate parameters such as \code{collection_id},
\code{bbox}, and \code{datetime} before calling these functions.
\code{openstac} provides functions like \code{parse_geojson()}, \code{parse_datetime()},
\code{parse_dbl()}, \code{parse_int()}, and \code{parse_str()} to facilitate this
process.

\itemize{

\item \code{create_ogcapi}: Creates an API object for OGC API Features.

\item \code{create_stac}: Creates an API object for STAC.

\item \code{api_landing_page}: Handles the STAC \code{/} endpoint.

\item \code{api_conformance}: Handles the STAC \verb{/conformance} endpoint.

\item \code{api_collections}: Handles the STAC \verb{/collections} endpoint.

\item \code{api_collection}: Handles the STAC
\verb{/collection/\{collection_id\}} endpoint.

\item \code{api_items}: Handles the STAC
\verb{/collection/\{collection_id\}/items} endpoint.

\item \code{api_item}: Handles the STAC
\verb{/collection/\{collection_id\}/item/\{item_id\}} endpoint.

\item \code{api_search}: Handles the STAC \verb{/search} endpoint.

}
}
\references{
For more information about the STAC specification,
see: \url{https://stacspec.org/}

For more information about the OGC API specification,
see: \url{http://www.opengis.net/doc/IS/ogcapi-features-1/1.0}
}
\seealso{
\code{\link[=create_stac]{create_stac()}}, \code{\link[=create_ogcapi]{create_ogcapi()}}: Functions for creating STAC and
OGC API objects, respectively.

\code{\link[=parse_int]{parse_int()}}, \code{\link[=parse_dbl]{parse_dbl()}}, \code{\link[=parse_str]{parse_str()}}, \code{\link[=parse_datetime]{parse_datetime()}},
\code{\link[=parse_geojson]{parse_geojson()}}: Functions to convert HTTP input strings
into R data types.
}
